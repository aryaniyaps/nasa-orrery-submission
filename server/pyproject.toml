[project]
name = "server"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "Aryan Iyappan", email = "aryaniyappan2006@gmail.com"},
]
dependencies = [
    "fastapi>=0.112.0",
    "asgi-correlation-id>=4.3.2",
    "uvicorn[standard]>=0.30.6",
    "pydantic>=2.8.2",
    "pydantic-settings>=2.4.0",
    "structlog>=24.4.0",
    "httpx>=0.27.2",
    "python-dotenv>=1.0.1",
    "ephem>=4.1.5",
    "skyfield>=1.49",
]
requires-python = ">=3.11.*"
readme = "README.md"
license = {text = "MIT"}


[tool.pdm]
distribution = false

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.5.5",
    "black>=24.4.2",
    "mypy>=1.11.1",
    "rich>=13.7.1",
]
test = [
    "pytest>=8.3.2",
    "anyio>=4.4.0",
    "pytest-pretty>=1.2.0",
    "pytest-timeout>=2.3.1",
    "coverage>=7.6.1",
]

[tool.pdm.scripts]
dev = "scripts/run_server.py"
lint = { composite = ["black .", "ruff check --fix .", "black .", "mypy ."] }
generate-schema = "scripts/generate_schema.py"

[tool.pytest.ini_options]
timeout = 5
pythonpath = "."
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["app"]
omit = []
command_line = "-m pytest -vv"
concurrency = ["greenlet"]
branch = true

[tool.setuptools.packages.find]
where = ["."] # list of folders that contain the packages (["."] by default)
include = [
    "*",
] # package names should match these glob patterns (["*"] by default)
exclude = [] # exclude packages matching these glob patterns (empty by default)
namespaces = false # to disable scanning PEP 420 namespaces (true by default)

[tool.mypy]
plugins = ["pydantic.mypy", "strawberry.ext.mypy_plugin"]
exclude = ["^.venv/"]

strict = true
follow_imports = "normal"
ignore_missing_imports = false

disallow_untyped_calls = false

allow_redefinition = false
disallow_any_explicit = false
ignore_errors = false
local_partial_types = true
no_implicit_optional = true
strict_optional = true
warn_no_return = true
warn_unused_ignores = false
warn_return_any = false
warn_unreachable = true

pretty = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["pdf2image.*", "uvicorn.*", "pytesseract.*"]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true

[tool.ruff]
src = ["app", "tests"]
lint.fixable = ["F", "E", "W", "I", "COM", "UP", "RUF"]
lint.unfixable = [
    "F841", # variable  is assigned to but never used
]
lint.select = ["ALL"]
lint.ignore = [
    "E501",    # line length
    "ANN101",
    "ANN102",
    "D10",     # disable mandatory docstrings
    "D203",    # one-blank-line-before-class
    "D212",    # multi-line-summary-first-line
    "PD",      # pandas-vet
    "PLR0913", # too many arguments
    "TCH001",
    "TCH002",
    "TCH003",
    "EXE",
    "COM812",
    "ISC001",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "S105", "S106", "E712"]
"migrations/*" = ["INP001"]
"migrations/versions/*" = ["D400", "D415"]


[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = []

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"starlette.status".msg = "Use http.HTTPStatus instead."
"fastapi.status".msg = "Use http.HTTPStatus instead."
"httpx.codes".msg = "Use http.HTTPStatus instead."